basePath: /
definitions:
  auth.inAuthDtos:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.outAuthDtos:
    properties:
      id:
        type: integer
      token:
        type: string
      username:
        type: string
    type: object
  user.inUserDto:
    properties:
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    type: object
  user.outPaginateDto:
    properties:
      pagination: {}
      users: {}
    type: object
  user.outUserDto:
    properties:
      created_at:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      role:
        type: string
      username:
        type: string
      verfied_at:
        type: string
    type: object
  utils.DataResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  utils.Response:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: api.gopos.web.id
info:
  contact:
    email: fadli.aqil12@gmail.com
    name: Muhamad Fadli Aqil
    url: http://instagram.com/fadliiaqil_
  description: Rest API Endpoint for GoPOS.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://gopos.web.id/terms/
  title: GoPOS API
  version: "1.0"
paths:
  /auth:
    delete:
      description: Logs out the user by invalidating the provided access token.
      operationId: logoutUser
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logout Successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Logout
      tags:
      - Authentication
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns an access token.
      operationId: loginUser
      parameters:
      - description: User credentials for login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.inAuthDtos'
      produces:
      - application/json
      responses:
        "200":
          description: User login successful
          schema:
            allOf:
            - $ref: '#/definitions/utils.DataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.outAuthDtos'
                  type: array
              type: object
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login
      tags:
      - Authentication
  /user:
    delete:
      consumes:
      - application/json
      description: Delete user data with the provided information
      operationId: deleteUser
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Delete user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.inUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete user data
      tags:
      - User
    get:
      description: Retrieves the profile data for the authenticated user.
      operationId: getProfile
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile data
          schema:
            allOf:
            - $ref: '#/definitions/utils.DataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/user.outUserDto'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get Profile
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Update user data with the provided information
      operationId: updateUser
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.inUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user.inUserDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update user data
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new user with the provided data
      operationId: createUser
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.inUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.DataResponse'
            - properties:
                data:
                  $ref: '#/definitions/user.inUserDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create a new user
      tags:
      - User
  /user/all:
    get:
      description: Retrieves a list of users with pagination support.
      operationId: getAllUsers
      parameters:
      - default: '"Bearer "'
        description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'Page number for pagination (default: 1)'
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of users with pagination
          schema:
            allOf:
            - $ref: '#/definitions/utils.DataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/user.outPaginateDto'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get All Users
      tags:
      - User
securityDefinitions:
  Bearer Token:
    in: Authorization
    name: Bearer Token
    type: apiKey
swagger: "2.0"
